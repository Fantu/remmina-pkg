From ee55a1d16c3abb106df51e5c15d7b1c4252192a0 Mon Sep 17 00:00:00 2001
From: Fabio Fantoni <fabio.fantoni@m2r.biz>
Date: Wed, 25 Nov 2020 16:25:50 +0100
Subject: [PATCH] [RFC] rdp: add Use base credential for RD gateway
 autentication

Even if rfi->settings->GatewayUseSameCredentials is TRUE (setted when gw
user/password/domain are empty) remmina still request gw credentials in some
cases.
This because GatewayUseSameCredentials in freerdp use gateway credentials also
for base, as opposite of remmina.

This patch add a flag for choose is use base credentials also for gateway
credentials.
In remmina_rdp_gw_authenticate use and save base cred if the new option is true.
In remmina_rdp_main reset gateway credentials if the new option is true.
Keeped for retrocompability the code for "auto" use base settings for gateway
without this flag (that was working for the case where both base username and
password are stored)

Note: in the last few years I do too few programming and I did this patch pretty
fast, there could be errors, even on simple things.

I also want ask a question:
I keeped for retrocompability the code about "auto" use base settings for
gateway (that was working for the case where both base username and password are
stored), or with new flag is not good?

Any other advice for improve the patch is appreciated.
---
 plugins/rdp/rdp_plugin.c | 46 +++++++++++++++++++++++++++++++++-------
 1 file changed, 38 insertions(+), 8 deletions(-)

--- a/plugins/rdp/rdp_plugin.c
+++ b/plugins/rdp/rdp_plugin.c
@@ -727,6 +727,7 @@
 	RemminaProtocolWidget *gp;
 	gboolean save;
 	gboolean disablepasswordstoring;
+	gboolean basecredforgw;
 	RemminaFile *remminafile;
 
 	rfi = (rfContext *)instance->context;
@@ -736,14 +737,26 @@
 	if (!remmina_plugin_service->file_get_string(remminafile, "gateway_server"))
 		return False;
 	disablepasswordstoring = remmina_plugin_service->file_get_int(remminafile, "disablepasswordstoring", FALSE);
+	basecredforgw = remmina_plugin_service->file_get_int(remminafile, "base-cred-for-gw", FALSE);
 
-	ret = remmina_plugin_service->protocol_plugin_init_auth(gp,
+	if (basecredforgw) {
+		ret = remmina_plugin_service->protocol_plugin_init_auth(gp,
+								(disablepasswordstoring ? 0 : REMMINA_MESSAGE_PANEL_FLAG_SAVEPASSWORD) | REMMINA_MESSAGE_PANEL_FLAG_USERNAME | REMMINA_MESSAGE_PANEL_FLAG_DOMAIN,
+								_("Enter RDP authentication credentials"),
+								remmina_plugin_service->file_get_string(remminafile, "username"),
+								remmina_plugin_service->file_get_string(remminafile, "password"),
+								remmina_plugin_service->file_get_string(remminafile, "domain"),
+								NULL);
+	} else {
+		ret = remmina_plugin_service->protocol_plugin_init_auth(gp,
 								(disablepasswordstoring ? 0 : REMMINA_MESSAGE_PANEL_FLAG_SAVEPASSWORD) | REMMINA_MESSAGE_PANEL_FLAG_USERNAME | REMMINA_MESSAGE_PANEL_FLAG_DOMAIN,
 								_("Enter RDP gateway authentication credentials"),
 								remmina_plugin_service->file_get_string(remminafile, "gateway_username"),
 								remmina_plugin_service->file_get_string(remminafile, "gateway_password"),
 								remmina_plugin_service->file_get_string(remminafile, "gateway_domain"),
 								NULL);
+	}
+
 
 	if (ret == GTK_RESPONSE_OK) {
 		s_username = remmina_plugin_service->protocol_plugin_init_get_username(gp);
@@ -755,14 +768,23 @@
 		s_domain = remmina_plugin_service->protocol_plugin_init_get_domain(gp);
 		if (s_domain) rfi->settings->GatewayDomain = strdup(s_domain);
 
-		remmina_plugin_service->file_set_string(remminafile, "gateway_username", s_username);
-		remmina_plugin_service->file_set_string(remminafile, "gateway_domain", s_domain);
-
 		save = remmina_plugin_service->protocol_plugin_init_get_savepassword(gp);
-		if (save)
-			remmina_plugin_service->file_set_string(remminafile, "gateway_password", s_password);
-		else
-			remmina_plugin_service->file_set_string(remminafile, "gateway_password", NULL);
+
+		if (basecredforgw) {
+			remmina_plugin_service->file_set_string(remminafile, "username", s_username);
+			remmina_plugin_service->file_set_string(remminafile, "domain", s_domain);
+			if (save)
+				remmina_plugin_service->file_set_string(remminafile, "password", s_password);
+			else
+				remmina_plugin_service->file_set_string(remminafile, "password", NULL);
+		} else {
+			remmina_plugin_service->file_set_string(remminafile, "gateway_username", s_username);
+			remmina_plugin_service->file_set_string(remminafile, "gateway_domain", s_domain);
+			if (save)
+				remmina_plugin_service->file_set_string(remminafile, "gateway_password", s_password);
+			else
+				remmina_plugin_service->file_set_string(remminafile, "gateway_password", NULL);
+		}
 
 		if (s_username) g_free(s_username);
 		if (s_password) g_free(s_password);
@@ -1279,6 +1301,13 @@
 			rfi->settings->ProxyPort = proxy_port;
 	}
 
+	if (remmina_plugin_service->file_get_int(remminafile, "base-cred-for-gw", FALSE)){
+		// Reset gateway credentials
+		remmina_plugin_service->file_set_string(remminafile, "gateway_username", NULL);
+		remmina_plugin_service->file_set_string(remminafile, "gateway_domain", NULL);
+		remmina_plugin_service->file_set_string(remminafile, "gateway_password", NULL);
+	}
+
 	/* Remote Desktop Gateway server address */
 	rfi->settings->GatewayEnabled = FALSE;
 	s = remmina_plugin_service->file_get_string(remminafile, "gateway_server");
@@ -2338,6 +2367,7 @@
 	{ REMMINA_PROTOCOL_SETTING_TYPE_CHECK,	  "relax-order-checks",	    N_("Relax order checks"),				 TRUE,	NULL,		  NULL														 },
 	{ REMMINA_PROTOCOL_SETTING_TYPE_CHECK,	  "glyph-cache",	    N_("Glyph cache"),					 TRUE,	NULL,		  NULL														 },
 	{ REMMINA_PROTOCOL_SETTING_TYPE_CHECK,	  "multitransport",	    N_("Enable multitransport protocol (UDP)"),		 TRUE,	NULL,		  N_("Using the UDP protocol may improve performance")								 },
+	{ REMMINA_PROTOCOL_SETTING_TYPE_CHECK,	  "base-cred-for-gw",	    N_("Use base credentials for gateway too"),					 TRUE,	NULL,		  NULL														 },
 	{ REMMINA_PROTOCOL_SETTING_TYPE_END,	  NULL,			    NULL,						 FALSE, NULL,		  NULL														 }
 };
 
