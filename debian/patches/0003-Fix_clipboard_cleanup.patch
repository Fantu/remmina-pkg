From: Giovanni Panozzo <giovanni@panozzo.it>
Date: Tue, 20 Feb 2018 21:45:16 +0100
Subject: Fix_clipboard_cleanup

Fixes: #1484 (upstream tracker)
---
 remmina-plugins/rdp/rdp_cliprdr.c |  8 ++------
 remmina-plugins/rdp/rdp_cliprdr.h |  2 +-
 remmina-plugins/rdp/rdp_plugin.c  | 15 +++++++--------
 remmina-plugins/rdp/rdp_plugin.h  |  3 +--
 4 files changed, 11 insertions(+), 17 deletions(-)

diff --git a/remmina-plugins/rdp/rdp_cliprdr.c b/remmina-plugins/rdp/rdp_cliprdr.c
index 846e566..b564bd6 100644
--- a/remmina-plugins/rdp/rdp_cliprdr.c
+++ b/remmina-plugins/rdp/rdp_cliprdr.c
@@ -741,7 +741,7 @@ void remmina_rdp_cliprdr_set_clipboard_data(RemminaProtocolWidget* gp, RemminaPl
 	}
 }
 
-static void remmina_rdp_cliprdr_detach_owner(RemminaProtocolWidget* gp, RemminaPluginRdpUiObject* ui)
+void remmina_rdp_cliprdr_detach_owner(RemminaProtocolWidget* gp)
 {
 	/* When closing a rdp connection, we should check if gp is a clipboard owner.
 	 * If it's an owner, detach it from the clipboard */
@@ -759,6 +759,7 @@ static void remmina_rdp_cliprdr_detach_owner(RemminaProtocolWidget* gp, RemminaP
 void remmina_rdp_event_process_clipboard(RemminaProtocolWidget* gp, RemminaPluginRdpUiObject* ui)
 {
 	TRACE_CALL(__func__);
+
 	switch (ui->clipboard.type) {
 
 	case REMMINA_RDP_UI_CLIPBOARD_FORMATLIST:
@@ -776,11 +777,6 @@ void remmina_rdp_event_process_clipboard(RemminaProtocolWidget* gp, RemminaPlugi
 	case REMMINA_RDP_UI_CLIPBOARD_SET_CONTENT:
 		remmina_rdp_cliprdr_set_clipboard_content(gp, ui);
 		break;
-
-	case REMMINA_RDP_UI_CLIPBOARD_DETACH_OWNER:
-		remmina_rdp_cliprdr_detach_owner(gp, ui);
-		break;
-
 	}
 }
 
diff --git a/remmina-plugins/rdp/rdp_cliprdr.h b/remmina-plugins/rdp/rdp_cliprdr.h
index a15b319..d40bff9 100644
--- a/remmina-plugins/rdp/rdp_cliprdr.h
+++ b/remmina-plugins/rdp/rdp_cliprdr.h
@@ -47,4 +47,4 @@ void remmina_rdp_cliprdr_init(rfContext* rfc, CliprdrClientContext* cliprdr);
 void remmina_rdp_channel_cliprdr_process(RemminaProtocolWidget* gp, wMessage* event);
 void remmina_rdp_event_process_clipboard(RemminaProtocolWidget* gp, RemminaPluginRdpUiObject* ui);
 CLIPRDR_FORMAT_LIST *remmina_rdp_cliprdr_get_client_format_list(RemminaProtocolWidget* gp);
-
+void remmina_rdp_cliprdr_detach_owner(RemminaProtocolWidget* gp);
diff --git a/remmina-plugins/rdp/rdp_plugin.c b/remmina-plugins/rdp/rdp_plugin.c
index 62cfe32..7b874b7 100644
--- a/remmina-plugins/rdp/rdp_plugin.c
+++ b/remmina-plugins/rdp/rdp_plugin.c
@@ -1172,7 +1172,13 @@ static gboolean remmina_rdp_close_connection(RemminaProtocolWidget* gp)
 	TRACE_CALL(__func__);
 	rfContext* rfi = GET_PLUGIN_DATA(gp);
 	freerdp* instance;
-	RemminaPluginRdpUiObject* ui;
+
+	if (!remmina_plugin_service->is_main_thread()) {
+		g_printf("WARNING: %s called on a subthread, may not work or crash remmina.\n", __func__);
+	}
+
+	/* Immediately deatch GTK clipboard from this connection */
+	remmina_rdp_cliprdr_detach_owner(gp);
 
 	if (freerdp_get_last_error(rfi->instance->context) == 0x10005) {
 		remmina_plugin_service->protocol_plugin_set_error(gp, "Another user connected to the server (%s), forcing the disconnection of the current connection.", rfi->settings->ServerHostname);
@@ -1187,13 +1193,6 @@ static gboolean remmina_rdp_close_connection(RemminaProtocolWidget* gp)
 
 	}
 
-	/* Cleanup clipboard: we cannot leave clipboard requesting data to this
-	 * connection */
-	ui = g_new0(RemminaPluginRdpUiObject, 1);
-	ui->type = REMMINA_RDP_UI_CLIPBOARD;
-	ui->clipboard.type = REMMINA_RDP_UI_CLIPBOARD_DETACH_OWNER;
-	remmina_rdp_event_queue_ui_sync_retint(gp, ui);
-
 	if (instance) {
 		if ( rfi->connected ) {
 			freerdp_disconnect(instance);
diff --git a/remmina-plugins/rdp/rdp_plugin.h b/remmina-plugins/rdp/rdp_plugin.h
index 383e091..cab7efa 100644
--- a/remmina-plugins/rdp/rdp_plugin.h
+++ b/remmina-plugins/rdp/rdp_plugin.h
@@ -163,8 +163,7 @@ typedef enum {
 	REMMINA_RDP_UI_CLIPBOARD_FORMATLIST,
 	REMMINA_RDP_UI_CLIPBOARD_GET_DATA,
 	REMMINA_RDP_UI_CLIPBOARD_SET_DATA,
-	REMMINA_RDP_UI_CLIPBOARD_SET_CONTENT,
-	REMMINA_RDP_UI_CLIPBOARD_DETACH_OWNER
+	REMMINA_RDP_UI_CLIPBOARD_SET_CONTENT
 } RemminaPluginRdpUiClipboardType;
 
 typedef enum {
